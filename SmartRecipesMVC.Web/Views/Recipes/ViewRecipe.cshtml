@using System.Data
@model SmartRecipesMVC.Application.ViewModels.RecipeVm.RecipeDetailsVm

@{
    ViewData["Title"] = "View recipe";
}

<br />
<h1>@Html.DisplayFor(model => model.Name)</h1>
<hr />

<div>
    <a type="button" class="btn btn-light" asp-action="Index"><i class="fas fa-arrow-alt-circle-left"></i> Back to List</a>
    @if (Model.OwnerId != null)
    {
        <a type="button" class="btn btn-warning" asp-action="EditRecipe" asp-route-id="@Model.Id">Edit</a>
        <a type="button" class="btn btn-danger" onclick="return confirmation()" asp-action="MoveToTrash" asp-route-id="@Model.Id">Delete</a>
        <a type="button" class="btn btn-info" asp-controller="Images" asp-action="Index" asp-route-recipeId="@Model.Id">Photos</a>
        <span class="d-inline-block" tabindex="0" data-toggle="tooltip" data-placement="right" title="Creating a PDF for recipe will be available soon!">
            <button type="button" class="btn btn-primary"><i class="fas fa-file-pdf"></i></button>
        </span>
    }
</div>
<br />

@*START OF ROW*@
<div class="row">
    @*START OF COLUMN LEFT*@
    <div class="col-xs-12 col-sm-8 col-md-8">
        @*START OF PREPARATION LEFT*@
        <div>
            <b>
                @Html.DisplayNameFor(model => model.Description)
                <i class="fas fa-sticky-note"></i>
            </b>
        </div>
        <div class="mb-3">
            @Html.DisplayFor(model => model.Description)
        </div>
        <div>
            <b>
                @Html.DisplayNameFor(model => model.Preparation)
                <i class="fas fa-book-open"></i>
            </b>
        </div>
        <div>
            @foreach (var item in Model.Preparation)
            {
                <p>
                    @Html.DisplayFor(modelItem => item)
                </p>
            }
        </div>
        <div>
            <b>
                @Html.DisplayNameFor(model => model.Hints)
                <i class="fas fa-lightbulb"></i>
            </b>
        </div>
        <div>
            @Html.DisplayFor(model => model.Hints)
        </div>
        @*END OF PREPARATION*@
        <br />
        @*START OF IMAGES*@
        <div id="carouselControls" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                @if (Model.Images.Count == 0)
                {
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="~/Content/PageContent/image-not-found.png" alt="Image error">
                    </div>
                }
                else
                {
                    @foreach (var image in Model.Images)
                    {
                        if (Model.Images.First() == image)
                        {
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="@Url.Content(image.ImagePath)" alt="Image error">
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img class="d-block w-100" src="@Url.Content(image.ImagePath)" alt="Image error">
                            </div>
                        }
                    }
                }

            </div>
            <a class="carousel-control-prev" href="#carouselControls" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselControls" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        @*END OF IMAGES*@
    </div>
    @*END OF COLUMN LEFT*@
    @*START OF COLUMN RIGTH*@
    <div class="col-xs-12 col-sm-4 col-md-4 order-first order-md-last">
        @*START OF INFORMATION*@
        <div class="card flexbox pb-2 pt-2" id="center">
            <h5 class="card-title" style="text-align: center">Information</h5>
            <hr class="mt-0" />
            <div class="row">
                <div class="col-6">
                    @Html.DisplayNameFor(model => model.Difficulty)
                    <i class="fas fa-star"></i>
                </div>
                <div class="col-6">
                    @Html.DisplayFor(model => model.Difficulty)
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    @Html.DisplayNameFor(model => model.Portions)
                    <i class="fas fa-utensils"></i>
                </div>
                <div class="col-6">
                    @Html.DisplayFor(model => model.Portions)
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    @Html.DisplayNameFor(model => model.PreparationTime)
                    <i class="fas fa-hourglass"></i>
                </div>
                <div class="col-6">
                    @Html.DisplayFor(model => model.PreparationTime) min.
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    @Html.DisplayNameFor(model => model.CreateDate)
                    <i class="fas fa-calendar"></i>
                </div>
                <div class="col-6">
                    @Html.DisplayFor(model => model.CreateDate)
                </div>
            </div>
        </div>
        @*END OF INFORMATION*@
        <br />
        @*START OF INGREDIENTS*@
        <div class="card-header">
            <b>
                @Html.DisplayNameFor(model => model.RecipeIngredients)
                <i class="fas fa-carrot"></i>
            </b>
        </div>
        <ul class="list-group list-group-flush">
            @foreach (var ingredient in Model.RecipeIngredients)
            {
                <li class="list-group-item">
                    @Html.DisplayName(ingredient.Ingredient.Name)
                    @if (ingredient.Weight != null)
                    {
                        @Html.DisplayName(" | " + ingredient.Weight + " grams")
                    }
                    @if (ingredient.Quantity != null)
                    {
                        @Html.DisplayName(" | " + ingredient.Quantity + " quantity")
                    }
                </li>
            }
        </ul>
        @*END OF INGREDIENTS*@
    </div>
    @*END OF COLUMN RIGHT*@
</div>
<br />
@*END OF ROW*@

<style>
    #center {
        text-align: center;
    }
</style>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function confirmation() {
            return confirm('Are you sure you want to delete that image?');
        }

        $(document).ready(function() {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}