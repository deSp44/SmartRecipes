@using Microsoft.AspNetCore.Identity
@using SmartRecipesMVC.Domain.Model
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown dropleft">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @if (User.Identity != null)
            {
                @User.Identity.Name
            }
        </a>
        <div class="dropdown-menu dropdown-menu-dark dropdown-menu-end dropdown-menu-lg-start" aria-labelledby="navbarDropdownMenuLink">
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Manage account</a>
            <div role="separator" class="dropdown-divider"></div>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Email">Email</a>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/SetPassword">Set password</a>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/ExternalLogins">External logins</a>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/TwoFactorAuthentication">Two factor authentication</a>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/PersonalData">Personal data</a>
        </div>
    </li>
}


@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}